<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello! on Noric Couderc</title>
    <link>https://noricc.github.io/</link>
    <description>Recent content in Hello! on Noric Couderc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Jun 2023 17:21:52 +0200</lastBuildDate><atom:link href="https://noricc.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Classification-based Collection Selection: Effectiveness and Adaptability</title>
      <link>https://noricc.github.io/publications/classification_based_collection_selection/</link>
      <pubDate>Mon, 12 Jun 2023 17:21:52 +0200</pubDate>
      
      <guid>https://noricc.github.io/publications/classification_based_collection_selection/</guid>
      <description>Accepted at the International Conference on Evaluation and Assessment in Software Engineering (EASE) 2023.
Abstract Carefully selecting the right collection datastructure can significantly improve the performance of a Java program. Unfortunately, the performance impact of a certain collection selection can be hard to estimate.To assist developers there are tools that recommend collections to use based on static and/or dynamic information about a program. The majority of existing collection selection tools for Java (e.</description>
    </item>
    
  </channel>
</rss>
